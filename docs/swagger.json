{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh user access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginPayloadDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh user access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginPayloadDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/token": {
      "post": {
        "operationId": "AuthController_token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh user access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginPayloadDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/checkEmail": {
      "post": {
        "operationId": "AuthController_checkEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckEmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Check if email is already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Boolean"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/project": {
      "get": {
        "operationId": "ProjectController_pagination",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProjectDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "ProjectController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/project/all": {
      "get": {
        "operationId": "ProjectController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get project list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/project/my": {
      "get": {
        "operationId": "ProjectController_myProjects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get project list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/project/users": {
      "post": {
        "operationId": "ProjectController_setUsers",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUsersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ProjectController_getProjectUsers",
        "parameters": [
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get users list by project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/project/users/{userId}": {
      "delete": {
        "operationId": "ProjectController_deleteProjectUsers",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get users list by project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/project/{projectId}": {
      "get": {
        "operationId": "ProjectController_findOne",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ProjectController_update",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ProjectController_delete",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "502": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionType"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "UserController_pagination",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "default": "true",
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "UserController_create",
        "summary": "user:create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/all": {
      "get": {
        "operationId": "UserController_getAllUsers",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/roles": {
      "post": {
        "operationId": "UserController_setRoles",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSetRolesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create set roles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UserController_getUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get users by userId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "UserController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/passwordUpdate": {
      "post": {
        "operationId": "UserController_passwordUpdate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordUpdateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Password Update"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/role": {
      "get": {
        "operationId": "RoleController_pagination",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "SYSTEM",
                "CUSTOM"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/RoleDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "RoleController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/role/permission": {
      "get": {
        "operationId": "RoleController_getAllPermissions",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/role/my": {
      "get": {
        "operationId": "RoleController_myRoles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get role my",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/role/all": {
      "get": {
        "operationId": "RoleController_getAllUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get role list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/role/permissions": {
      "post": {
        "operationId": "RoleController_setPermissions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleSetPermissionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/role/{roleId}": {
      "get": {
        "operationId": "RoleController_findOne",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "RoleController_update",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "RoleController_delete",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "502": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionType"
                }
              }
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/role/permissions/{roleId}": {
      "get": {
        "operationId": "RoleController_getPermissions",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/issue-type": {
      "post": {
        "operationId": "IssueTypeController_create",
        "parameters": [
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIssueTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get issue type list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "IssueType"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "IssueTypeController_findAll",
        "parameters": [
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get issue type list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssueTypeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "IssueType"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/issue-type/{id}": {
      "get": {
        "operationId": "IssueTypeController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get issue type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "IssueType"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "IssueTypeController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIssueTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get issue type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "IssueType"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "IssueTypeController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete issue type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "IssueType"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/board": {
      "post": {
        "operationId": "BoardController_create",
        "parameters": [
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoardDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create board",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Board"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "BoardController_findAll",
        "parameters": [
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoardDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Board"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/board/{id}": {
      "get": {
        "operationId": "BoardController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get board",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Board"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "BoardController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoardDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get board",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Board"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "BoardController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get board",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Board"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/task": {
      "post": {
        "operationId": "TaskController_create",
        "parameters": [
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "TaskController_findAll",
        "parameters": [
          {
            "name": "boardId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isBacklog",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/task/{id}": {
      "get": {
        "operationId": "TaskController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "TaskController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "TaskController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Delete task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/epics": {
      "post": {
        "operationId": "EpicsController_create",
        "parameters": [
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEpicDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create board",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpicDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Epic"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "EpicsController_findAll",
        "parameters": [
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpicDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Epic"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/epics/{id}": {
      "get": {
        "operationId": "EpicsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpicDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Epic"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "EpicsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEpicDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpicDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Epic"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "EpicsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Create board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpicDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Access denied"
          }
        },
        "tags": [
          "Epic"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Task Manager API",
    "description": "",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "SignupDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "userPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "projects": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "firstName",
          "lastName",
          "email",
          "mobileNumber",
          "isActive",
          "userPermissions",
          "roles",
          "projects"
        ]
      },
      "TokenPayloadDto": {
        "type": "object",
        "properties": {
          "expiresIn": {
            "type": "number"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "expiresIn",
          "accessToken",
          "refreshToken"
        ]
      },
      "LoginPayloadDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserDto"
          },
          "token": {
            "$ref": "#/components/schemas/TokenPayloadDto"
          }
        },
        "required": [
          "user",
          "token"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "CheckEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "Boolean": {
        "type": "object",
        "properties": {}
      },
      "PaginationDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "totalCount": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "totalCount",
          "page",
          "limit"
        ]
      },
      "ProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "abbreviation",
          "description",
          "color"
        ]
      },
      "CreateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "color"
        ]
      },
      "ProjectUsersDto": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "number"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "projectId",
          "userIds"
        ]
      },
      "UpdateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "DeleteDto": {
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "deleted"
        ]
      },
      "ExceptionType": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "timestamp": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "validation": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "statusCode",
          "timestamp",
          "path",
          "message",
          "validation",
          "data"
        ]
      },
      "UserCreateDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "identityNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "mobileNumber",
          "isActive"
        ]
      },
      "UserSetRolesDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userId",
          "roleIds"
        ]
      },
      "UserUpdateDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "identityNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "PasswordUpdateDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "checkPassword": {
            "type": "string"
          }
        },
        "required": [
          "oldPassword",
          "password",
          "checkPassword"
        ]
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SYSTEM",
              "CUSTOM"
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "name",
          "type",
          "permissions"
        ]
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "RoleSetPermissionsDto": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "roleId",
          "permissions"
        ]
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateIssueTypeColumnDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "filedName": {
            "type": "string"
          },
          "isRequired": {
            "type": "boolean"
          },
          "issueTypeId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "filedName",
          "isRequired",
          "issueTypeId"
        ]
      },
      "CreateIssueTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "Bug",
              "Task",
              "Sub-task",
              "Spike",
              "Test",
              "Research"
            ],
            "default": "Task"
          },
          "issueTypeColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateIssueTypeColumnDto"
            }
          }
        },
        "required": [
          "name",
          "description",
          "icon",
          "color",
          "isActive",
          "type"
        ]
      },
      "IssueTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "Bug",
              "Task",
              "Sub-task",
              "Spike",
              "Test",
              "Research"
            ],
            "default": "Task"
          },
          "issueTypeColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssueTypeColumnDto"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "icon",
          "color",
          "isActive",
          "type",
          "issueTypeColumns",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "IssueTypeColumnDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "filedName": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "isRequired": {
            "type": "boolean"
          },
          "issueTypeId": {
            "type": "number"
          },
          "issueType": {
            "$ref": "#/components/schemas/IssueTypeDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "filedName",
          "type",
          "isRequired",
          "issueTypeId",
          "issueType",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "UpdateIssueTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "Bug",
              "Task",
              "Sub-task",
              "Spike",
              "Test",
              "Research"
            ],
            "default": "Task"
          },
          "issueTypeColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateIssueTypeColumnDto"
            }
          }
        }
      },
      "CreateBoardColumnDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "number"
          },
          "boardId": {
            "type": "number"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "ToDo",
              "InProgress",
              "Done"
            ],
            "default": "ToDo"
          }
        },
        "required": [
          "name",
          "description",
          "position",
          "boardId",
          "taskStatus"
        ]
      },
      "CreateBoardDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "number"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateBoardColumnDto"
            }
          }
        },
        "required": [
          "name",
          "description",
          "position",
          "columns"
        ]
      },
      "EpicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "projectId": {
            "type": "number"
          },
          "position": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "projectId",
          "position",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "TaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "issueTypeId": {
            "type": "number"
          },
          "issueType": {
            "$ref": "#/components/schemas/IssueTypeDto"
          },
          "epicId": {
            "type": "number"
          },
          "epic": {
            "$ref": "#/components/schemas/EpicDto"
          },
          "projectId": {
            "type": "number"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectDto"
          },
          "boardId": {
            "type": "number"
          },
          "board": {
            "$ref": "#/components/schemas/BoardDto"
          },
          "boardColumnId": {
            "type": "number"
          },
          "boardColumn": {
            "$ref": "#/components/schemas/BoardColumnDto"
          },
          "isBacklog": {
            "type": "boolean"
          },
          "priority": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH"
            ],
            "default": "LOW"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "ToDo",
              "InProgress",
              "Done"
            ],
            "default": "ToDo"
          },
          "assigneeId": {
            "type": "number"
          },
          "assignee": {
            "$ref": "#/components/schemas/UserDto"
          },
          "reporterId": {
            "type": "number"
          },
          "reporter": {
            "$ref": "#/components/schemas/UserDto"
          },
          "createdById": {
            "type": "number"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserDto"
          },
          "deletedById": {
            "type": "number"
          },
          "deletedBy": {
            "$ref": "#/components/schemas/UserDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "issueTypeId",
          "issueType",
          "epicId",
          "epic",
          "projectId",
          "project",
          "boardId",
          "board",
          "boardColumnId",
          "boardColumn",
          "isBacklog",
          "priority",
          "taskStatus",
          "assigneeId",
          "assignee",
          "reporterId",
          "reporter",
          "createdById",
          "createdBy",
          "deletedById",
          "deletedBy",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "BoardDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "number"
          },
          "projectId": {
            "type": "number"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectDto"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardColumnDto"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDto"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "position",
          "projectId",
          "project",
          "columns",
          "tasks",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "BoardColumnDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "number"
          },
          "boardId": {
            "type": "number"
          },
          "board": {
            "$ref": "#/components/schemas/BoardDto"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDto"
            }
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "ToDo",
              "InProgress",
              "Done"
            ],
            "default": "ToDo"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "position",
          "boardId",
          "board",
          "tasks",
          "taskStatus",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "UpdateBoardColumnDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "number"
          },
          "boardId": {
            "type": "number"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "ToDo",
              "InProgress",
              "Done"
            ],
            "default": "ToDo"
          },
          "id": {
            "type": "number"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateBoardDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "number"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateBoardColumnDto"
            }
          }
        }
      },
      "CreateTaskPropertyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "filedName": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "isRequired": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "filedName",
          "value",
          "isRequired"
        ]
      },
      "CreateTaskDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "issueTypeId": {
            "type": "number"
          },
          "taskProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTaskPropertyDto"
            }
          },
          "epicId": {
            "type": "number"
          },
          "boardId": {
            "type": "number"
          },
          "boardColumnId": {
            "type": "number"
          },
          "isBacklog": {
            "type": "boolean"
          },
          "priority": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH"
            ],
            "default": "LOW"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "ToDo",
              "InProgress",
              "Done"
            ],
            "default": "ToDo"
          },
          "assigneeId": {
            "type": "number"
          },
          "reporterId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "description",
          "issueTypeId",
          "taskProperty",
          "boardId",
          "isBacklog",
          "priority",
          "taskStatus",
          "reporterId"
        ]
      },
      "UpdateTaskPropertyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "issueTypeId": {
            "type": "number"
          },
          "taskProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTaskPropertyDto"
            }
          },
          "epicId": {
            "type": "number"
          },
          "boardId": {
            "type": "number"
          },
          "boardColumnId": {
            "type": "number"
          },
          "isBacklog": {
            "type": "boolean"
          },
          "priority": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH"
            ],
            "default": "LOW"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "ToDo",
              "InProgress",
              "Done"
            ],
            "default": "ToDo"
          },
          "assigneeId": {
            "type": "number"
          },
          "reporterId": {
            "type": "number"
          },
          "id": {
            "type": "number"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateTaskDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "issueTypeId": {
            "type": "number"
          },
          "taskProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTaskPropertyDto"
            }
          },
          "epicId": {
            "type": "number"
          },
          "boardId": {
            "type": "number"
          },
          "boardColumnId": {
            "type": "number"
          },
          "isBacklog": {
            "type": "boolean"
          },
          "priority": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH"
            ],
            "default": "LOW"
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "ToDo",
              "InProgress",
              "Done"
            ],
            "default": "ToDo"
          },
          "assigneeId": {
            "type": "number"
          },
          "reporterId": {
            "type": "number"
          }
        }
      },
      "CreateEpicDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "description",
          "position"
        ]
      },
      "UpdateEpicDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "number"
          },
          "id": {
            "type": "number"
          }
        },
        "required": [
          "id"
        ]
      }
    }
  }
}